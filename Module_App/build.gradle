apply plugin: 'com.android.application'


apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'xinye-plugin_lifecycle'


android {
    compileSdkVersion COMPILE_SDK_VERSION.toInteger()
    defaultConfig {
        applicationId "com.xinye.component"
        minSdkVersion MIN_SDK_VERSION.toInteger()
        targetSdkVersion TARGET_SDK_VERSION.toInteger()
        versionCode APP_VERSION_CODE.toInteger()
        versionName APP_VERSION_NAME
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
            }
        }
    }

    signingConfigs {
        debug {
            keyAlias 'release'
            keyPassword 'release_keystore'
            storeFile file('../keystore/release_keystore.jks')
            storePassword 'release_keystore'
            v2SigningEnabled false
        }
        release {
            keyAlias 'release'
            keyPassword 'release_keystore'
            storeFile file('../keystore/release_keystore.jks')
            storePassword 'release_keystore'
            v2SigningEnabled false
        }
    }
    buildTypes {

        debug {
            minifyEnabled false
            shrinkResources false
            //Zipalign压缩优化
            zipAlignEnabled true
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            shrinkResources false
            //Zipalign压缩优化
            zipAlignEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    if(IS_LIBRARY.toBoolean()){
        implementation project(':Module_Main')
        implementation project(':Module_Architecture')
    }else{
        implementation project(':Module_CoreLibrary')
    }

    kapt "com.alibaba:arouter-compiler:$AROUNTER_COMPILER_VERSION"
    kapt "com.github.bumptech.glide:compiler:$GLIDE_ANNOTATION_PROCESSOR_VERSION"
    kapt project(':lib_annotation_processor')
}
